    scalar DateTime
    
    type Query {
        users(skip:Int, take:Int, where: UserWhereInput): [User]!
        user(email:String): User
    }

    interface BaseModel{
        createdAt: DateTime!
    }

    type User {
        id: ID!
        email: String
        emailVerified: DateTime
        termsAndConditionsAccepted: DateTime
        name: String!
        image: String
        position: String
        createdAt: DateTime
        updatedAt: DateTime!
        roleId: String
    }

    type UserMonitoring implements BaseModel{
        id: String
        usage: Int
        description: String
        userId: String
        createdAt: DateTime!
    }